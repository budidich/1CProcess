
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Возврат;
	
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура("ТаблицаОрганизацийКонтрагентов", ПолучитьТаблицаОрганизацийКонтрагентов());
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
КонецПроцедуры


Функция ОрганизацииКонтрагента(Контрагент) Экспорт
	СтрокаОрганизации = "";
	Для каждого СтрокаТЧ из Контрагент.Организации Цикл
		СтрокаОрганизации = СтрокаОрганизации + ?(СтрокаОрганизации = "", "", ",") +СтрокаТЧ.Организация;
	КонецЦикла;
	Возврат СтрокаОрганизации;
КонецФункции

Функция ОрганизацииКонтрагента2(Контрагент) Экспорт
	СтрокаОрганизации = "";
	Для каждого СтрокаТЧ из Контрагент.Организации Цикл
		СтрокаОрганизации = СтрокаОрганизации + ?(СтрокаОрганизации = "", "", ",") +СтрокаТЧ.Организация;
	КонецЦикла;
	
	Возврат СтрокаОрганизации;
КонецФункции

Функция ПолучитьТаблицаОрганизацийКонтрагентов() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КонтрагентыОрганизации.Ссылка КАК Контрагент,
	|	КонтрагентыОрганизации.Организация
	|ИЗ
	|	Справочник.Контрагенты.Организации КАК КонтрагентыОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО КонтрагентыОрганизации.Ссылка = Контрагенты.Ссылка
	|ГДЕ
	|	Контрагенты.РольПлательщик
	|	И Контрагенты.ПометкаУдаления = ЛОЖЬ");
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаРезультат.Колонки.Добавить("ОрганизацииРС", Новый ОписаниеТипов("Строка", 300));
	ТаблицаРезультат.Колонки.Добавить("ОрганизацииКонтрагента", Новый ОписаниеТипов("Строка", 300));
	Для каждого СтрокаТаблица из Таблица Цикл
		
		ТаблицаРезультат.НайтиСтроки();
		
		СтрокаТаблицаРезультат = ТаблицаРезультат.Добавить();
		
		
	КонецЦикла;
	
	
	
	СхемаКомпоновкиДанных = ПолучитьМакет("Макет");
	//НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	НастройкиКомпоновки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	
//	НастройкиКомпоновки.Структура.Очистить();
//	//НастройкиКомпоновки.Структура.Добавить(СхемаКомпоновкиДанных.НастройкиПоУмолчанию.Структура[0]);
//	НастройкиКомпоновки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	// Таблица значений, в которую будет получен результат
	Результат = Новый ДеревоЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат Результат;
	
КонецФункции








